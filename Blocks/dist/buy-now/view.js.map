{"version":3,"file":"buy-now/view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACN4D;AAE5DA,+DAAK,CAAE,WAAW,EAAE;EACnBE,SAAS,EAAE;IACVC,IAAI,EAAEA,CAAA,KAAM;MACF,MAAM;QAAEC;MAAI,CAAC,GAAGH,oEAAU,CAAC,CAAC;MACrCI,OAAO,CAACC,GAAG,CAAE,mBAAmB,GAAGF,GAAG,CAAC;IACxC,CAAC;IACaG,KAAK,EAAEA,CAAA,KAAM;MACjB,MAAM;QAAEH;MAAI,CAAC,GAAGH,oEAAU,CAAC,CAAC;MACrCI,OAAO,CAACC,GAAG,CAAE,oBAAoB,GAAGF,GAAG,CAAC;IAC3B;EACf;AACD,CAAE,CAAC,C","sources":["webpack:///external module \"@wordpress/interactivity\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./src/buy-now/view.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { store, getContext } from '@wordpress/interactivity'\n\nstore( 'woo-vipps', {\n\tcallbacks: {\n\t\tinit: () => {\n            const { pid } = getContext();\n\t\t\tconsole.log( ' init called for ' + pid);\n\t\t},\n                watch: () => {\n            const { pid } = getContext();\n\t\t\tconsole.log( ' watch called for ' + pid);\n                }\n\t},\n} );\n\n"],"names":["store","getContext","callbacks","init","pid","console","log","watch"],"sourceRoot":""}